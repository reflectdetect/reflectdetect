[tool.poetry]
name = "reflectdetect"
version = "v0.1.12"
description = "An automated workflow for in-flight radiometric calibration of UAV imagery"
authors = ["Luca Francis <lucajoshua.francis@stud.uni-goettingen.de>"]
license = "GPL-3.0-or-later"
readme = "README.md"
repository = "https://github.com/reflectdetect/reflectdetect"

[tool.poetry.scripts]
reflectdetect-apriltag = "reflectdetect.apriltag_main:main"
reflectdetect-geolocation = "reflectdetect.geolocation_main:main"
reflectdetect-converter = "reflectdetect.raw_to_radiance:main"

[tool.poetry.dependencies]
python = "^3.10"
numpy = "^2.1.0"
rasterio = "^1.3.10"
typed-argument-parser = "^1.10.1"
opencv-python = "^4.10.0.84"
shapely = "^2.0.6"
pyexiftool = "^0.5.6"
robotpy-apriltag = "^2024.3.2.1"
fiona = "^1.9.6"
geopandas = "^1.0.1"
matplotlib = "^3.9.2"
pydantic = "^2.8.2"
tifffile = "^2024.8.28"
tqdm = "^4.66.5"
rich = "^13.8.0"
rich-argparse = "^1.5.2"

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.2"
sphinx-rtd-theme = "^2.0.0"
pytest = "^8.3.3"
hypothesis = "^6.112.2"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["reflectdetect/"]
python_version="3.10"
strict = true
warn_unreachable = true
pretty = true
ignore_missing_imports=true
plugins = "numpy.typing.mypy_plugin"
exclude = "reflectdetect/manufacturer/"
[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20